$webResourceManager.requireResource("onlyoffice.onlyoffice-confluence-plugin:onlyoffice-confluence-plugin-resources-editor")
#requireResourcesForContext("viewattachments")

<!DOCTYPE html
    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=ANSI" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width" />

    <!--
    *
    * (c) Copyright Ascensio System SIA 2021
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *     http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    *
    -->

    <title>${docTitle} - ONLYOFFICE</title>

    #standardHeader()

    <link rel="shortcut icon" href="${favicon}">
    <link rel="icon" type="image/x-icon" href="${favicon}">
    <meta name="ajs-space-name" content="${spaceName}">
    <meta name="ajs-page-id" content="${pageId}">
    <meta name="ajs-latest-page-id" content="${pageId}">
    <meta name="ajs-space-key" content="${spaceKey}">
</head>

<body>
    <div class="form">
        <div id="iframeEditor"></div>
    </div>

    <script type="text/javascript" src="${docserviceApiUrl}"></script>
    <script type="text/javascript" language="javascript">

        var docEditor;
        var defaultPanelComponent = new Array();

        var onAppReady = function () {
            var errorMessage = "${errorMessage}";
            if (errorMessage) {
                docEditor.showMessage(errorMessage);
            }
            if (${demo}) {
                docEditor.showMessage("$i18n.getText('onlyoffice.configuration.demo.message')");
            }
        };

        var onRequestHistory = function () {
            var historyInfoUri = "${historyInfoUriAsHtml}";
            var xhr = new XMLHttpRequest();
            xhr.open("GET", historyInfoUri, false);
            xhr.send();

            if (xhr.status == 200) {
                var historyInfo = JSON.parse(xhr.responseText);
                docEditor.refreshHistory(historyInfo);
            }
        };

        var onRequestHistoryData = function (event) {
            var version = event.data;
            var historyDataUri = "${historyDataUriAsHtml}";
            var xhr = new XMLHttpRequest();
            xhr.open("GET", historyDataUri + "&version=" + version, false);
            xhr.send();

            if (xhr.status == 200) {
                var historyData = JSON.parse(xhr.responseText);
                docEditor.setHistoryData(historyData);
            }
        };

        var onRequestHistoryClose = function() {
            document.location.reload();
        };

        var insertDialog = function (docEditorEvent, windowFromUrl, command = null) {
            if (defaultPanelComponent.length == 0) {
                AJS.Editor.ImageDialog.panelComponent.forEach((component) => {
                    defaultPanelComponent.push(component);
                });
            } else {
                AJS.Editor.ImageDialog.panelComponent = new Array();
                defaultPanelComponent.forEach((component) => {
                    AJS.Editor.ImageDialog.panelComponent.push(component);
                });
            }

            if (!windowFromUrl) {
                AJS.Editor.ImageDialog.panelComponent.splice(1, 1);
            }

            AJS.Editor.ImageDialog.insertImageDialog(function(a) {
                if (a.url && windowFromUrl) {
                    docEditorEvent({
                        "c": command,
                        "url": a.url
                    });
                } else {
                    var selectItems = a.selectItems;
                    var attachments = new Array();
                    selectItems.forEach((selectItem) => {
                        attachments.push(selectItem.attributes.id);
                    });

                    var xhr = new XMLHttpRequest();
                    xhr.open("POST", "${fileProviderUriAsHtml}", false);
                    xhr.send(JSON.stringify({
                        command: command,
                        attachments: attachments
                    }));

                    if (xhr.status == 200) {
                        var dataAttachments = JSON.parse(xhr.responseText);

                        // bug https://bugzilla.onlyoffice.com/show_bug.cgi?id=50683
                        // dataAttachments.forEach((dataAttachment) => {
                        //    docEditorEvent(dataAttachment);
                        // });

                        docEditorEvent(dataAttachments.pop());
                    }
                }
            });
        };

        var onRequestInsertImage = function(event) {
            insertDialog(docEditor.insertImage, true, event.data.c);
        };

        var onRequestCompareFile = function() {
            insertDialog(docEditor.setRevisedFile, false);
        };

        var onRequestMailMergeRecipients = function(event) {
            insertDialog(docEditor.setMailMergeRecipients, false);
        };

        var connectEditor = function () {
            if (typeof DocsAPI === "undefined") {
                alert("$i18n.getText('onlyoffice.connector.docs-api.undefined')");
                return;
            }

            var json = '${jsonAsHtml}';

            var config = {
                "events" : {
                    "onAppReady": onAppReady,
                    "onRequestHistory": onRequestHistory,
                    "onRequestHistoryData": onRequestHistoryData,
                    "onRequestHistoryClose": onRequestHistoryClose,
                    "onRequestInsertImage": onRequestInsertImage,
                    "onRequestCompareFile": onRequestCompareFile,
                    "onRequestMailMergeRecipients": onRequestMailMergeRecipients,
                },
            };

            if (json) {
                Object.assign(config, JSON.parse(json));
            }

            docEditor = new DocsAPI.DocEditor("iframeEditor", config);
        };

        if (window.addEventListener) {
            window.addEventListener("load", connectEditor);
        } else if (window.attachEvent) {
            window.attachEvent("load", connectEditor);
        }
    </script>
</body>

</html>